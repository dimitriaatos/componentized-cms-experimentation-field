{"version":3,"sources":["webpack:///./src/pages/Contact.jsx"],"names":["useStyles","makeStyles","theme","main","position","width","height","overflow","backgroundColor","contactContainer","marginTop","spacing","palette","secondary","display","justifyContent","flexWrap","button","margin","color","dark","buttonFocusVisible","icons","url","Contact","props","classes","map","icon","index","root","focusVisible","link","test","dtheme","iconSize","propTypes","PropTypes","array"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;CAGA;;AACA;AASA,MAAMA,SAAS,GAAGC,8EAAU,CAACC,KAAK,KAC9B;AACIC,MAAI,EAAE;AACFC,YAAQ,EAAE,OADR;AAEFC,SAAK,EAAE,MAFL;AAGFC,UAAM,EAAE,MAHN;AAIFC,YAAQ,EAAE,MAJR;AAKFC,mBAAe,EAAE;AALf,GADV;AAQIC,kBAAgB,EAAE;AACdC,aAAS,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CADG;AAEdH,mBAAe,EAAEN,KAAK,CAACU,OAAN,CAAcC,SAFjB;AAGdC,WAAO,EAAE,MAHK;AAIdC,kBAAc,EAAE,QAJF;AAKdC,YAAQ,EAAE;AALI,GARtB;AAeIC,QAAM,EAAE;AACJC,UAAM,EAAEhB,KAAK,CAACS,OAAN,CAAc,CAAd,CADJ;AAEJQ,SAAK,EAAEjB,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBO,IAF3B;AAGJ,eAAW;AACPD,WAAK,EAAEjB,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBV;AADxB;AAHP,GAfZ;AAsBIkB,oBAAkB,EAAE;AAChBF,SAAK,EAAEjB,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBV;AADf;AAtBxB,CAD8B,CAAN,CAA5B;AA6BA,MAAMmB,KAAK,GAAG,EAAd,C,CAIA;;AACA,MAAMC,GAAG,GAAG,gFAAZ,C,CAEA;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,QAAMC,OAAO,GAAG1B,SAAS,EAAzB;AACA,SACI;AAAM,aAAS,EAAE0B,OAAO,CAACvB;AAAzB,KACI;AAAK,aAAS,EAAEuB,OAAO,CAACjB;AAAxB,KACKa,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAEH,2DAAC,oEAAD;AACI,iBAAa,EAAE,IADnB;AAEI,OAAG,EAAEA,KAFT;AAGI,WAAO,EAAE;AACLC,UAAI,EAAEJ,OAAO,CAACT,MADT;AAELc,kBAAY,EAAEL,OAAO,CAACL;AAFjB,KAHb;AAOI,QAAI,EAAEO,IAAI,CAACI,IAPf,CAQI;AARJ;AASI,UAAM,EAAET,GAAG,CAACU,IAAJ,CAASL,IAAI,CAACI,IAAd,IAAsB,QAAtB,GAAiC;AAT7C,KAWI,2DAAC,8EAAD;AAAiB,QAAI,EAAEJ,IAAI,CAACA,IAA5B;AAAkC,QAAI,EAAEM,8CAAM,CAACC;AAA/C,IAXJ,CAFP,CADL,CADJ,CADJ;AAuBH,CAzBD;;AA2BAX,OAAO,CAACY,SAAR,GAAoB;AAChBd,OAAK,EAAEe,iDAAS,CAACC;AADD,CAApB;AAIed,sEAAf,E","file":"5.bundle.js","sourcesContent":["import React from 'react'\nimport dtheme from './../theme'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport makeStyles from '@material-ui/styles/makeStyles'\nimport PropTypes from 'prop-types'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport {\n    faGithub,\n    faFacebook,\n    faTwitter,\n    faFacebookMessenger,\n    faInstagram,\n    faLinkedin\n} from '@fortawesome/free-brands-svg-icons'\n\nconst useStyles = makeStyles(theme => (\n    {\n        main: {\n            position: 'fixed',\n            width: '100%',\n            height: '100%',\n            overflow: 'auto',\n            backgroundColor: 'inherit',\n        },\n        contactContainer: {\n            marginTop: theme.spacing(2),\n            backgroundColor: theme.palette.secondary,\n            display: 'flex',\n            justifyContent: 'center',\n            flexWrap: 'wrap',\n        },\n        button: {\n            margin: theme.spacing(1),\n            color: theme.palette.secondary.dark,\n            '&:hover': {\n                color: theme.palette.secondary.main,\n            },\n        },\n        buttonFocusVisible: {\n            color: theme.palette.secondary.main,\n        },\n    }\n))\n\nconst icons = [  \n\n]\n\n// eslint-disable-next-line no-useless-escape\nconst url = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/\n\n// const getLink = \n\nconst Contact = props => {\n    const classes = useStyles()\n    return (\n        <main className={classes.main} >\n            <div className={classes.contactContainer}>\n                {icons.map((icon, index) => \n                    (\n                        <ButtonBase\n                            disableRipple={true}\n                            key={index}\n                            classes={{\n                                root: classes.button,\n                                focusVisible: classes.buttonFocusVisible,\n                            }}\n                            href={icon.link}\n                            // onClick={getLink}\n                            target={url.test(icon.link) ? '_blank' : ''}\n                        >\n                            <FontAwesomeIcon icon={icon.icon} size={dtheme.iconSize} />\n                        </ButtonBase>\n                    )\n                )}\n            </div>\n        </main>\n    )\n}\n\nContact.propTypes = {\n    icons: PropTypes.array,\n}\n\nexport default Contact"],"sourceRoot":""}