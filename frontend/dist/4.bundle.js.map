{"version":3,"sources":["webpack:///./src/components/Work.jsx","webpack:///./src/components/WorkPreview.jsx","webpack:///./src/da-cms/src/list/List.jsx","webpack:///./src/helper.jsx","webpack:///./src/pages/Portfolio.jsx"],"names":["rest","abstract","parser","rich","links","embed","html","presentations","technicalDetails","description","Work","props","info","infoParser","textAlign","title","Object","keys","map","key","index","propTypes","PropTypes","object","styles","theme","button","marginBottom","spacing","unit","marginLeft","marginRight","width","maxWidth","breakpoints","values","sm","display","justifyContent","fontSize","typography","borderRadius","shape","boxShadow","shadows","transition","transitions","create","duration","short","backgroundColor","palette","background","paper","buttonFocusVisible","card","table","cardContent","leftColumn","fontVariant","paddingRight","rightColumn","sideInfo","alignItems","modal","position","padding","outline","top","bottom","left","right","WorkPreview","state","setState","useState","makeTitle","name","charAt","toUpperCase","slice","handleOpen","handleClose","prev","by","and","date","type","classes","previewInfo","root","editable","isRequired","bool","withStyles","ul","listStyleType","List","context","useContext","Context","content","setContent","useContent","path","add","splice","handleChange","value","loading","Loading","string","component","func","addButton","element","MultiClick","constructor","callback","options","clicks","assign","time","click","timeStamp","count","Date","months","getDate","getMonth","getFullYear","commas","array","join","str","forEach","length","concat","ReactHtmlParser","subset","o","reduce","a","e","isObject","prototype","toString","call","accum","option","Portfolio","params"],"mappings":"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","file":"4.bundle.js","sourcesContent":["import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from 'prop-types'\n\nimport {parser, infoParser} from './../helper'\n\nconst rest = {\n  abstract: parser.rich,\n  links: parser.links,\n  embed: parser.html,\n  presentations: parser.presentations,\n  technicalDetails: parser.rich,\n  description: parser.rich,\n}\n\nconst Work = props => {\n  const info = infoParser(props.info, rest)\n\n  return (\n    <>\n      <Typography variant=\"h3\" style={{textAlign:'center'}}>\n        {props.info.title}\n      </Typography>\n      {\n        Object.keys(info).map((key, index) => (\n          <p key={index} >\n            {info[key]}\n          </p>\n        ))\n      }\n    </>\n\n  )\n}\n\nWork.propTypes = {\n  info: PropTypes.object\n}\n\nexport default Work","import React, {Fragment, useState} from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\nimport Modal from '@material-ui/core/Modal'\n// import TextEditable from './TextEditable'\nimport Work from './Work'\nimport {parser, infoParser} from './../helper'\n\nconst styles = theme => ({\n  button: {\n    marginBottom: theme.spacing.unit,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '100%',\n    maxWidth: theme.breakpoints.values.sm,\n    display: 'flex',\n    justifyContent: 'space-between',\n    fontSize: theme.typography.fontSize,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[1],\n    '&:hover': {\n      boxShadow: theme.shadows[5],\n      transition: theme.transitions.create('boxShadow', {\n        duration: theme.transitions.duration.short,\n      }),\n    },\n    backgroundColor: theme.palette.background.paper,\n  },\n  buttonFocusVisible: {\n    boxShadow: theme.shadows[5],\n    transition: theme.transitions.create('boxShadow', {\n      duration: theme.transitions.duration.short,\n    }),\n    backgroundColor: 'inherit',\n  },\n  card: {\n    width: 'inherit',\n    backgroundColor: 'inherit',\n  },\n  table: {\n    textAlign: 'left',\n  },\n  cardContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    fontSize: theme.typography.fontSize,\n  },\n  leftColumn: {\n    fontVariant: 'small-caps',\n    textAlign: 'right',\n    paddingRight: theme.typography.fontSize,\n    fontSize: theme.typography.fontSize - 3,\n  },\n  rightColumn: {\n  },\n  sideInfo: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  modal: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n    top: '10%',\n    bottom: '10%',\n    left: '10%',\n    right: '10%',\n  },\n})\n\nconst WorkPreview = props => {\n  const [state, setState] = useState(false)\n\n  const makeTitle = name => name.charAt(0).toUpperCase() + name.slice(1)\n\n  const handleOpen = () => {\n    setState(true)\n  }\n\n  const handleClose = () => {\n    setState(false)\n  }\n\n  const prev = {\n    title: 0,\n    by: parser.and,\n    date: parser.date,\n    type: 0,\n  }\n\n  const {classes} = props,\n    {type, ...previewInfo} = infoParser(props.info, prev)\n\n  return (\n    <Fragment>\n      <ButtonBase\n        focusVisibleClassName={classes.buttonFocusVisible}\n        classes={{root: classes.button}}\n        type=\"button\"\n        onClick={handleOpen}\n      >\n        <Card className={classes.card}>\n          <CardContent className={classes.cardContent}>\n            <table className={classes.table}>\n              <tbody>\n                {\n                  Object.keys(previewInfo).map((key, index) => (\n                    <tr key={index}>\n                      <td className={classes.leftColumn}>{makeTitle(key)}</td>\n                      <td className={classes.rightColumn}>{previewInfo[key]}</td>\n                    </tr>\n                  ))\n                }\n              </tbody>\n            </table>\n            {\n              props.editable ?\n              <input className={classes.sideInfo} type=\"text\" name=\"type\" id=\"type\"/> :\n              <div className={classes.sideInfo}>{type}</div>\n            }\n          </CardContent>\n        </Card>\n      </ButtonBase>\n      <Modal open={state} onClose={handleClose}>\n      <div className={classes.modal}>\n        <Work info={props.info} editable={props.editable} />\n      </div>\n      </Modal>\n    </Fragment>\n  )\n}\n\nWorkPreview.propTypes = {\n  classes: PropTypes.object.isRequired,\n  info: PropTypes.object.isRequired,\n  editable: PropTypes.bool\n}\n\nexport default withStyles(styles)(WorkPreview)\n\n{/* <List component={Editable} editable={true} name=\"\" /> */}","import React, { Suspense, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport {Context, Loading, useContent} from '../main/Main'\n// import UrlSafeString from 'url-safe-string'\n\nconst styles = {\n  ul: {\n    listStyleType: 'none',\n    padding: '0',\n    backgroundColor: 'inherit',\n  },\n}\n\nconst List = props => {\n  const context = useContext(Context)\n  const [content, setContent] = useContent(props.path)\n\n  const add = () => {\n    setContent([...content].splice(0, 0, {}))\n  }\n\n  const handleChange = (index, value) => {\n    // setContent(prevContent => ({\n    //   list: [...prevContent.list].splice(index, 1, value)\n    // }))\n  }\n\n  return (\n    <Suspense fallback={props.loading ? <props.loading/> : Loading ? <Loading/> : null } >\n      <ul style={styles.ul} >\n        {context.state.editable ? <props.addButton onClick={add} /> : null}\n        {content.map((info, index) => (\n          <li key={index}>\n            <props.component\n              onChange={handleChange}\n              info={info}\n              editable={props.editable}\n            />\n          </li>\n        ))}\n      </ul>\n    </Suspense>\n  )\n}\n\nList.propTypes = {\n  path: PropTypes.string.isRequired,\n  editable: PropTypes.bool,\n  component: PropTypes.func.isRequired,\n  addButton: PropTypes.element,\n  loading: PropTypes.element,\n}\n\nexport default List","import React from 'react'\nimport Text from './da-cms/src/text/Text'\nimport ReactHtmlParser from 'react-html-parser'\n\nconst MultiClick = class {\n  constructor(callback, options) {\n    this.clicks = 0\n    this.prev = 0\n    Object.assign(this, {time: 400, clicks: 3}, options, {callback})\n  }\n  click({timeStamp}) {\n    \n    if (timeStamp - this.prev < this.time) {\n      this.count += 1\n      if (this.count > this.clicks -2) {\n        \n        this.count = 0\n        this.callback()\n      } else {\n        this.prev = timeStamp\n      }\n    } else {\n      this.prev = timeStamp\n      this.count = 0\n    }\n  }\n}\n\nconst date = date => {\n  if (typeof date == 'string') date = new Date(date)\n  const months = [\n    'January', 'February', 'March',\n    'April', 'May', 'June', 'July',\n    'August', 'September', 'October',\n    'November', 'December'\n  ]\n  return `${date.getDate()} ${months[date.getMonth()]}, ${date.getFullYear()}`\n}\n\nconst commas = array => array.join(', ')\n\nconst and = array => {\n  let str = ''\n  array.forEach((value, index) => {\n    switch (index) {\n      case array.length - 2:\n        str = str.concat(value + ' and ')\n      break\n      case array.length - 1:\n        str = str.concat(value)\n      break\n      default:\n        str = str.concat(value + ', ')\n    }\n  })\n  return str\n}\n\nconst rich = content => <Text content={content}></Text>\n\nconst html = content => ReactHtmlParser(content)\n\nconst parser = {date, commas, and, html, rich}\n\nconst subset = (...props) => o => props.reduce((a, e) => ({ ...a, [e]: o[e] }), {});\n\nconst isObject = (value) => Object.prototype.toString.call(value) != '[object Object]'\n\nconst infoParser = (info, options) => {\n  return Object.keys(options).reduce((accum, key) => {\n    const value = info[key]\n    const option = options[key]\n\n    typeof option == 'number' ?\n      accum[key] = value :\n    typeof option == 'function' ?\n      accum[key] = option(value) :\n      null\n    \n    return accum\n  }, {})\n}\n\nexport { MultiClick, parser, subset, isObject, infoParser }","import React from 'react'\nimport PropTypes from 'prop-types'\nimport List from './../da-cms/src/list/List'\n\nimport WorkPreview from './../components/WorkPreview'\n\nconst Portfolio = (props) => {\n    return <List component={WorkPreview} path=\"portfolio\" />\n}\n\nPortfolio.propTypes = {\n    params: PropTypes.object\n}\n\n\nexport default Portfolio"],"sourceRoot":""}